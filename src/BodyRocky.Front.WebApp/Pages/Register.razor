@page "/register"
@using BodyRocky.Core.Contracts.Requests.AccountRequests
@inject IState<AuthState> AuthState
@inject AuthDispatcher AuthDispatcher

<!-- login -->
<div class="contain py-16">
  <div class="max-w-lg mx-auto shadow px-6 py-7 rounded overflow-hidden">
    <h2 class="text-2xl uppercase font-medium mb-1">
      Creer un compte
    </h2>
    <p class="text-gray-600 mb-6 text-sm">
      Inscrivez-vous pour accéder à votre compte
    </p>
    <EditForm Model="_registerModel" OnValidSubmit="HandleRegister" autocomplete="off">
      <DataAnnotationsValidator/>
      
      <div class="space-y-2">
        <div>
          <label class="text-gray-600 mb-2 block" for="firstname">Prénom</label>
          <InputText class="block w-full border border-gray-300 px-4 py-3 text-gray-600 text-sm rounded focus:ring-0 focus:border-primary placeholder-gray-400"
                     id="firstname"
                     placeholder="Laurent"
                     @bind-Value="_registerModel.FirstName"/>
        </div>
        
        <div>
          <label class="text-gray-600 mb-2 block" for="lastname">Nom</label>
          <InputText class="block w-full border border-gray-300 px-4 py-3 text-gray-600 text-sm rounded focus:ring-0 focus:border-primary placeholder-gray-400"
                     id="lastname"
                     placeholder="Dupont"
                     @bind-Value="_registerModel.LastName"/>
        </div>
      
        <div>
          <label class="text-gray-600 mb-2 block" for="email">Email</label>
          <InputText class="block w-full border border-gray-300 px-4 py-3 text-gray-600 text-sm rounded focus:ring-0 focus:border-primary placeholder-gray-400"
                     id="email"
                     placeholder="laurent.dupont@example.com"
                     autocomplete="email"
                     @bind-Value="_registerModel.Email"/>
        </div>
        
        <div>
          <label class="text-gray-600 mb-2 block" for="birthdate">Date de naissance</label>
          <InputDate class="block w-full border border-gray-300 px-4 py-3 text-gray-600 text-sm rounded focus:ring-0 focus:border-primary placeholder-gray-400"
                     id="birthdate"
                     @bind-Value="_registerModel.BirthDate"/>
        </div>
        
        <div>
          <label class="text-gray-600 mb-2 block" for="password">Mot de passe</label>
          <InputText class="block w-full border border-gray-300 px-4 py-3 text-gray-600 text-sm rounded focus:ring-0 focus:border-primary placeholder-gray-400"
                     id="password"
                     type="password"
                     placeholder="********"
                     autocomplete="new-password"
                     @bind-Value="_registerModel.Password"/>
        </div>
        
        <div>
          <label class="text-gray-600 mb-2 block" for="confirmPassword">Confirmer le mot de passe</label>
          <InputText class="block w-full border border-gray-300 px-4 py-3 text-gray-600 text-sm rounded focus:ring-0 focus:border-primary placeholder-gray-400"
                     id="confirmPassword"
                     type="password"
                     placeholder="********"   
                     autocomplete="new-password"
                     @bind-Value="_registerModel.ConfirmPassword"/>
        </div>
        
        <div class="mt-6">
          <div class="flex items-center">
            <input class="text-primary focus:ring-0 rounded-sm cursor-pointer" id="aggrement" name="aggrement"
                   type="checkbox">
            <label class="text-gray-600 ml-3 cursor-pointer" for="aggrement">
              J'accepte les <a class="text-primary" href="#">termes et conditions</a>
            </label>
          </div>
        </div>
        
        <ValidationSummary/>

        <div class="mt-4">
          <button class="block w-full py-2 text-center text-white bg-primary border border-primary rounded hover:bg-transparent hover:text-primary transition uppercase font-roboto font-medium"
                  type="submit">
            @if(AuthState.Value.IsLoading)
            {
              <span class="animate-spin">
                <i class="fas fa-spinner"></i>
              </span>
            }
            else
            {
              <span>
                Créer un compte
              </span>
            }
          </button>
        </div>
      </div>
    </EditForm>

    <!-- login with -->
    <div class="mt-6 flex justify-center relative">
      <div class="text-gray-600 uppercase px-3 bg-white z-10 relative">
        Ou inscrivez-vous avec
      </div>
      <div class="absolute left-0 top-3 w-full border-b-2 border-gray-200"></div>
    </div>
    <div class="mt-4 flex gap-4">
      <a class="w-1/2 py-2 text-center text-white bg-blue-800 rounded uppercase font-roboto font-medium text-sm hover:bg-blue-700"
         href="#">facebook</a>
      <a class="w-1/2 py-2 text-center text-white bg-red-600 rounded uppercase font-roboto font-medium text-sm hover:bg-red-500"
         href="#">google</a>
    </div>
    <!-- ./login with -->

    <p class="mt-4 text-center text-gray-600">
      Vous avez déjà un compte? 
      <NavLink class="text-primary" href="@Routes.LOGIN_ROUTE">
        Connectez-vous
      </NavLink>
    </p>
  </div>
</div>
<!-- ./login -->

@code {

  private readonly RegisterModel _registerModel = new()
  {
    BirthDate = DateTime.Now.AddYears(-18)
  };

  private void HandleRegister(EditContext context)
  {
    SignupRequest signupRequest = new()
    {
      FirstName = _registerModel.FirstName,
      LastName = _registerModel.LastName,
      Email = _registerModel.Email,
      Password = _registerModel.Password,
      ConfirmPassword = _registerModel.ConfirmPassword
    };
    
    AuthDispatcher.Register(signupRequest);
  }

}