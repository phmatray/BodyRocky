// <auto-generated />
using System;
using BodyRocky.Back.WebApi.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BodyRocky.Back.WebApi.Migrations
{
    [DbContext(typeof(BodyRockyDbContext))]
    partial class BodyRockyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.Address", b =>
                {
                    b.Property<Guid>("AddressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddressFromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AddressToDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<Guid>("ZipCodeID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AddressID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("ZipCodeID");

                    b.ToTable("Address", (string)null);
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.Basket", b =>
                {
                    b.Property<Guid>("BasketID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BasketDateAdded")
                        .HasColumnType("datetime2");

                    b.Property<int>("BasketStatusCode")
                        .HasColumnType("int");

                    b.Property<Guid>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BasketID");

                    b.HasIndex("BasketStatusCode");

                    b.HasIndex("CustomerID");

                    b.ToTable("Basket", (string)null);
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.BasketProduct", b =>
                {
                    b.Property<Guid>("BasketID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("BasketID", "ProductID");

                    b.HasIndex("ProductID");

                    b.ToTable("BasketProducts", (string)null);
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.BasketStatus", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("BasketStatus", (string)null);
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.Brand", b =>
                {
                    b.Property<Guid>("BrandID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BrandLogo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrandID");

                    b.ToTable("Brand", (string)null);

                    b.HasData(
                        new
                        {
                            BrandID = new Guid("959badbe-7bad-57b5-cd3c-f92f276eebd5"),
                            BrandLogo = "https://picsum.photos/640/480/?image=731",
                            BrandName = "Kling, Turner and Stroman"
                        },
                        new
                        {
                            BrandID = new Guid("c2bba114-d677-a87e-9248-5a20bead30a8"),
                            BrandLogo = "https://picsum.photos/640/480/?image=762",
                            BrandName = "Cassin, Kilback and Feil"
                        },
                        new
                        {
                            BrandID = new Guid("89acfb10-c061-8721-53b1-d060c8aa0ce0"),
                            BrandLogo = "https://picsum.photos/640/480/?image=475",
                            BrandName = "Romaguera - Renner"
                        },
                        new
                        {
                            BrandID = new Guid("9ff33aaf-690f-bbc1-2c6f-ce2c728d04a5"),
                            BrandLogo = "https://picsum.photos/640/480/?image=932",
                            BrandName = "Howe Group"
                        },
                        new
                        {
                            BrandID = new Guid("963e205d-c089-03f5-23c8-ab1b097901d5"),
                            BrandLogo = "https://picsum.photos/640/480/?image=701",
                            BrandName = "Rosenbaum, Wilkinson and Wehner"
                        },
                        new
                        {
                            BrandID = new Guid("e3e45b65-eda4-a53a-66d0-9b1f8ed98efc"),
                            BrandLogo = "https://picsum.photos/640/480/?image=1068",
                            BrandName = "Weissnat, West and Hills"
                        },
                        new
                        {
                            BrandID = new Guid("b2c36398-f822-2f8c-9e02-bd1e16f7c55a"),
                            BrandLogo = "https://picsum.photos/640/480/?image=433",
                            BrandName = "Bauch Inc"
                        },
                        new
                        {
                            BrandID = new Guid("0ff7bd5d-7afb-72a0-d8aa-f62c8441cdf7"),
                            BrandLogo = "https://picsum.photos/640/480/?image=45",
                            BrandName = "Mueller - Prosacco"
                        },
                        new
                        {
                            BrandID = new Guid("cec876ad-01dd-e278-c9a2-a9307cb760db"),
                            BrandLogo = "https://picsum.photos/640/480/?image=428",
                            BrandName = "Von, Hintz and Treutel"
                        },
                        new
                        {
                            BrandID = new Guid("0bf3561a-9991-29d4-ce39-8263dd0de6f4"),
                            BrandLogo = "https://picsum.photos/640/480/?image=202",
                            BrandName = "Denesik - Schulist"
                        },
                        new
                        {
                            BrandID = new Guid("0136a8be-afc5-e0cc-f28b-6c79d99c9320"),
                            BrandLogo = "https://picsum.photos/640/480/?image=338",
                            BrandName = "Rutherford - Hirthe"
                        },
                        new
                        {
                            BrandID = new Guid("68fbb9a4-cd27-aa9f-7ae6-4281bda59a71"),
                            BrandLogo = "https://picsum.photos/640/480/?image=932",
                            BrandName = "Batz, Reinger and Cummerata"
                        },
                        new
                        {
                            BrandID = new Guid("cc4236f3-8909-7940-c61f-66e5915e05ad"),
                            BrandLogo = "https://picsum.photos/640/480/?image=700",
                            BrandName = "Willms and Sons"
                        },
                        new
                        {
                            BrandID = new Guid("490c6622-bbea-0234-2100-e37d6a9bb082"),
                            BrandLogo = "https://picsum.photos/640/480/?image=32",
                            BrandName = "Robel Group"
                        },
                        new
                        {
                            BrandID = new Guid("c7b3305f-9bdb-472c-95c4-51184dd2aa8d"),
                            BrandLogo = "https://picsum.photos/640/480/?image=474",
                            BrandName = "Lang, Shanahan and Mraz"
                        },
                        new
                        {
                            BrandID = new Guid("3bc6573e-7be9-adf6-82f4-32bcb4b0f1b2"),
                            BrandLogo = "https://picsum.photos/640/480/?image=504",
                            BrandName = "Lind, Bernier and Muller"
                        },
                        new
                        {
                            BrandID = new Guid("cbae5d6d-972f-22f0-58bf-b9d0ee21d8ed"),
                            BrandLogo = "https://picsum.photos/640/480/?image=955",
                            BrandName = "Sporer, Hamill and Armstrong"
                        },
                        new
                        {
                            BrandID = new Guid("5b1fd012-2199-dab9-e58b-92bd68d0fa17"),
                            BrandLogo = "https://picsum.photos/640/480/?image=383",
                            BrandName = "Bauch Group"
                        },
                        new
                        {
                            BrandID = new Guid("7834298a-c5eb-188f-c4b8-7b2e59525a8c"),
                            BrandLogo = "https://picsum.photos/640/480/?image=764",
                            BrandName = "Hamill - Murphy"
                        },
                        new
                        {
                            BrandID = new Guid("33734837-1227-5085-ded5-1b373c300fe9"),
                            BrandLogo = "https://picsum.photos/640/480/?image=533",
                            BrandName = "Ortiz, Corwin and Halvorson"
                        },
                        new
                        {
                            BrandID = new Guid("102c15a0-6464-7616-6d88-01236ecd42b5"),
                            BrandLogo = "https://picsum.photos/640/480/?image=119",
                            BrandName = "Hessel LLC"
                        },
                        new
                        {
                            BrandID = new Guid("9dee3a3f-f243-4328-71f1-e8ffc3e39632"),
                            BrandLogo = "https://picsum.photos/640/480/?image=936",
                            BrandName = "Fritsch Inc"
                        },
                        new
                        {
                            BrandID = new Guid("4d70da6f-141a-62ce-cc33-9a5596935366"),
                            BrandLogo = "https://picsum.photos/640/480/?image=707",
                            BrandName = "Bergstrom and Sons"
                        },
                        new
                        {
                            BrandID = new Guid("7c04d23b-019f-8a60-3710-6edd8e2bd064"),
                            BrandLogo = "https://picsum.photos/640/480/?image=538",
                            BrandName = "Cartwright - O'Keefe"
                        },
                        new
                        {
                            BrandID = new Guid("3d77c624-9356-3068-8f30-0bb85651729c"),
                            BrandLogo = "https://picsum.photos/640/480/?image=831",
                            BrandName = "Lang - Halvorson"
                        },
                        new
                        {
                            BrandID = new Guid("bb2b43b4-bdc4-6ac7-c2ee-9c850c9c4d75"),
                            BrandLogo = "https://picsum.photos/640/480/?image=248",
                            BrandName = "Schroeder, Crona and Auer"
                        },
                        new
                        {
                            BrandID = new Guid("0506fb2f-86b6-b93c-348f-d4f2697be09a"),
                            BrandLogo = "https://picsum.photos/640/480/?image=365",
                            BrandName = "Crooks Inc"
                        },
                        new
                        {
                            BrandID = new Guid("93a16dfd-ab85-04b9-fd40-0ecea27f8448"),
                            BrandLogo = "https://picsum.photos/640/480/?image=451",
                            BrandName = "Mayer, Larson and Collins"
                        },
                        new
                        {
                            BrandID = new Guid("c75e8db1-a293-6c21-daa0-4d8d3f9bc259"),
                            BrandLogo = "https://picsum.photos/640/480/?image=742",
                            BrandName = "Cremin, Klocko and Wintheiser"
                        },
                        new
                        {
                            BrandID = new Guid("0680f4bc-ea50-98f6-7504-6a63414cdf42"),
                            BrandLogo = "https://picsum.photos/640/480/?image=496",
                            BrandName = "Bogan, Hammes and Gorczany"
                        },
                        new
                        {
                            BrandID = new Guid("41c09f22-e462-eec2-b236-046951f599dd"),
                            BrandLogo = "https://picsum.photos/640/480/?image=847",
                            BrandName = "Monahan Inc"
                        },
                        new
                        {
                            BrandID = new Guid("e39c64d3-fd29-e24f-16a6-8e0134a19954"),
                            BrandLogo = "https://picsum.photos/640/480/?image=301",
                            BrandName = "Gleichner Group"
                        },
                        new
                        {
                            BrandID = new Guid("cec3aa34-f966-56f0-4664-0aaf516dc3be"),
                            BrandLogo = "https://picsum.photos/640/480/?image=927",
                            BrandName = "Weissnat - Hettinger"
                        },
                        new
                        {
                            BrandID = new Guid("0bd7df94-02a8-b034-5c45-1dfb54b1f529"),
                            BrandLogo = "https://picsum.photos/640/480/?image=618",
                            BrandName = "Aufderhar, Johnson and Conn"
                        },
                        new
                        {
                            BrandID = new Guid("9cb19bf8-afde-ddc7-db50-e2ad897154d2"),
                            BrandLogo = "https://picsum.photos/640/480/?image=394",
                            BrandName = "Ryan - Okuneva"
                        },
                        new
                        {
                            BrandID = new Guid("4700fa3f-5a0e-779f-9a1d-3561e7579c43"),
                            BrandLogo = "https://picsum.photos/640/480/?image=313",
                            BrandName = "Beier, Ruecker and Weimann"
                        },
                        new
                        {
                            BrandID = new Guid("3bf480d3-cb4e-a040-56e8-a8186acdfd9b"),
                            BrandLogo = "https://picsum.photos/640/480/?image=706",
                            BrandName = "Gleichner, Sipes and Reynolds"
                        },
                        new
                        {
                            BrandID = new Guid("801abe43-31c6-11d5-ac49-5c10586c790b"),
                            BrandLogo = "https://picsum.photos/640/480/?image=864",
                            BrandName = "Shanahan - Bogan"
                        },
                        new
                        {
                            BrandID = new Guid("8d3443d6-7c48-9e89-a8bb-e145421d90c2"),
                            BrandLogo = "https://picsum.photos/640/480/?image=443",
                            BrandName = "Carroll, Hauck and Waelchi"
                        },
                        new
                        {
                            BrandID = new Guid("4c9ea98f-1208-8361-8f5f-ccf4b179ff89"),
                            BrandLogo = "https://picsum.photos/640/480/?image=385",
                            BrandName = "Schmidt - Feil"
                        });
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.Category", b =>
                {
                    b.Property<Guid>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit");

                    b.HasKey("CategoryID");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryID = new Guid("c1335c7f-bc8f-4550-b54d-0fc020e0f9a3"),
                            CategoryIcon = "fas fa-heartbeat",
                            CategoryImage = "/assets/images/category/category-1.jpg",
                            CategoryName = "Cardio-training",
                            IsFeatured = true
                        },
                        new
                        {
                            CategoryID = new Guid("898c680d-24de-452b-9b94-2c540e3b8ac7"),
                            CategoryIcon = "fas fa-dumbbell",
                            CategoryImage = "/assets/images/category/category-2.jpg",
                            CategoryName = "Musculation",
                            IsFeatured = true
                        },
                        new
                        {
                            CategoryID = new Guid("d50c44df-7c21-48dd-a4a5-59d4637a1480"),
                            CategoryIcon = "fas fa-gamepad",
                            CategoryImage = "/assets/images/category/category-3.jpg",
                            CategoryName = "Jeux et loisirs",
                            IsFeatured = true
                        },
                        new
                        {
                            CategoryID = new Guid("a85d899f-05b5-456f-bff2-5c66a3fec3e5"),
                            CategoryIcon = "fas fa-running",
                            CategoryImage = "/assets/images/category/category-4.jpg",
                            CategoryName = "Fitness",
                            IsFeatured = true
                        },
                        new
                        {
                            CategoryID = new Guid("044318dd-7a67-4e40-a8aa-21f5938c3cc7"),
                            CategoryIcon = "fas fa-heart",
                            CategoryImage = "/assets/images/category/category-5.jpg",
                            CategoryName = "Yoga et bien-être",
                            IsFeatured = true
                        },
                        new
                        {
                            CategoryID = new Guid("7f8062d5-d970-403a-842a-5502acc09559"),
                            CategoryIcon = "fas fa-utensils",
                            CategoryImage = "/assets/images/category/category-6.jpg",
                            CategoryName = "Nutrition",
                            IsFeatured = true
                        });
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.Customer", b =>
                {
                    b.Property<Guid>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customer", (string)null);

                    b.HasData(
                        new
                        {
                            CustomerID = new Guid("d1b897fc-7777-027f-b858-964806e03621"),
                            BirthDate = new DateTime(2016, 6, 27, 23, 2, 17, 383, DateTimeKind.Local).AddTicks(9376),
                            EmailAddress = "Mable.Rolfson58@yahoo.com",
                            FirstName = "Mable",
                            LastName = "Rolfson",
                            Password = "e033dd26e7cf26f6cff8231b914bbe0303ba850e",
                            PhoneNumber = "408-259-3567 x43796"
                        },
                        new
                        {
                            CustomerID = new Guid("24a86f6c-5977-f46f-67dd-dddba5a9a732"),
                            BirthDate = new DateTime(2010, 9, 11, 19, 11, 39, 455, DateTimeKind.Local).AddTicks(8172),
                            EmailAddress = "Glenda.Miller55@hotmail.com",
                            FirstName = "Glenda",
                            LastName = "Miller",
                            Password = "c2f97b613f85667f540a1ab347f59196eb9912e5",
                            PhoneNumber = "501-919-5456 x91797"
                        },
                        new
                        {
                            CustomerID = new Guid("17577a5e-f5e7-ef5f-e697-f2ace5c8e0c2"),
                            BirthDate = new DateTime(2010, 2, 21, 12, 48, 4, 454, DateTimeKind.Local).AddTicks(7657),
                            EmailAddress = "Archie.Hahn@gmail.com",
                            FirstName = "Archie",
                            LastName = "Hahn",
                            Password = "957157e78391aaa4af9916108bbfcbd03b6c7ea0",
                            PhoneNumber = "813-979-0238 x51606"
                        },
                        new
                        {
                            CustomerID = new Guid("ef5a7cad-8ea0-9b3c-e6a8-909589729ae3"),
                            BirthDate = new DateTime(2015, 8, 16, 16, 45, 48, 167, DateTimeKind.Local).AddTicks(3183),
                            EmailAddress = "Duane_Moore37@hotmail.com",
                            FirstName = "Duane",
                            LastName = "Moore",
                            Password = "b7359b9627fa8b91b712c73d06f712aae57b0f75",
                            PhoneNumber = "1-825-765-0585 x45387"
                        },
                        new
                        {
                            CustomerID = new Guid("a20d864f-6e74-3fdf-6542-3bc4a7cc8183"),
                            BirthDate = new DateTime(2022, 4, 23, 14, 24, 6, 41, DateTimeKind.Local).AddTicks(8092),
                            EmailAddress = "Wesley1@gmail.com",
                            FirstName = "Wesley",
                            LastName = "Heidenreich",
                            Password = "4a71661c3378db86f754d2e9fefb4b4fcc937c27",
                            PhoneNumber = "(970) 276-4966"
                        },
                        new
                        {
                            CustomerID = new Guid("e5d8d983-cc47-c0ad-a4e4-3223e8c09803"),
                            BirthDate = new DateTime(2016, 10, 18, 11, 2, 47, 518, DateTimeKind.Local).AddTicks(7550),
                            EmailAddress = "Mable_Conn@yahoo.com",
                            FirstName = "Mable",
                            LastName = "Conn",
                            Password = "0db5458ac49aca27fc5734013543eccb3cab5ae8",
                            PhoneNumber = "422.982.7599"
                        },
                        new
                        {
                            CustomerID = new Guid("8e09c622-cfa5-b448-898b-fcdeeaed3264"),
                            BirthDate = new DateTime(2006, 1, 2, 12, 59, 24, 302, DateTimeKind.Local).AddTicks(1454),
                            EmailAddress = "Molly47@hotmail.com",
                            FirstName = "Molly",
                            LastName = "Connelly",
                            Password = "1ca15085de48bdac3363c866db3b1d54872283b6",
                            PhoneNumber = "287-431-0605 x289"
                        },
                        new
                        {
                            CustomerID = new Guid("f517f468-6424-0fe9-b705-96e2bddd731f"),
                            BirthDate = new DateTime(2012, 4, 21, 4, 24, 0, 679, DateTimeKind.Local).AddTicks(437),
                            EmailAddress = "Micheal1@hotmail.com",
                            FirstName = "Micheal",
                            LastName = "Fay",
                            Password = "f1cf0567c636d823b1e94506d9f1f702e6f1394a",
                            PhoneNumber = "(604) 399-1908 x8432"
                        },
                        new
                        {
                            CustomerID = new Guid("d7eee062-cbfe-cb53-056f-5ba3e656b6a2"),
                            BirthDate = new DateTime(2007, 1, 28, 7, 55, 35, 593, DateTimeKind.Local).AddTicks(9151),
                            EmailAddress = "Glen.Carter@gmail.com",
                            FirstName = "Glen",
                            LastName = "Carter",
                            Password = "9954029fff5432707940ef16dfb476b6bc8caa33",
                            PhoneNumber = "208-921-5192 x8048"
                        },
                        new
                        {
                            CustomerID = new Guid("09cf3630-e958-88ab-34f5-562947070a64"),
                            BirthDate = new DateTime(2011, 4, 4, 22, 56, 11, 432, DateTimeKind.Local).AddTicks(6217),
                            EmailAddress = "Miranda_Kautzer@yahoo.com",
                            FirstName = "Miranda",
                            LastName = "Kautzer",
                            Password = "61e9b6a8243268b0a562447f3add7326a534cdab",
                            PhoneNumber = "773.504.2410 x607"
                        },
                        new
                        {
                            CustomerID = new Guid("370d7448-f7f8-fe75-2c48-ac7cd88f0347"),
                            BirthDate = new DateTime(2016, 12, 29, 4, 22, 38, 231, DateTimeKind.Local).AddTicks(5246),
                            EmailAddress = "Olive97@hotmail.com",
                            FirstName = "Olive",
                            LastName = "Hickle",
                            Password = "a382513e123e640970820b27036340be38d694c4",
                            PhoneNumber = "1-576-378-1925"
                        },
                        new
                        {
                            CustomerID = new Guid("16b4c4a0-2f35-237d-681b-bd453093a236"),
                            BirthDate = new DateTime(2005, 6, 15, 4, 8, 23, 37, DateTimeKind.Local).AddTicks(2593),
                            EmailAddress = "Harold.Bogan@gmail.com",
                            FirstName = "Harold",
                            LastName = "Bogan",
                            Password = "2aa937f9a85d813e69f69c15af86c16802d692cb",
                            PhoneNumber = "(613) 923-3761 x211"
                        },
                        new
                        {
                            CustomerID = new Guid("4c3865c2-4fa0-2030-ee84-adc09a2380c0"),
                            BirthDate = new DateTime(2009, 10, 21, 12, 12, 14, 739, DateTimeKind.Local).AddTicks(300),
                            EmailAddress = "Monica_Toy9@yahoo.com",
                            FirstName = "Monica",
                            LastName = "Toy",
                            Password = "eff466ec72b71f1089bb20eb4a759cc6edeafcf7",
                            PhoneNumber = "472.363.9783 x0777"
                        },
                        new
                        {
                            CustomerID = new Guid("6569e4a5-16d0-f2e7-efd6-d481c804b5da"),
                            BirthDate = new DateTime(2006, 3, 19, 21, 51, 4, 350, DateTimeKind.Local).AddTicks(8021),
                            EmailAddress = "Jacob.Zboncak27@gmail.com",
                            FirstName = "Jacob",
                            LastName = "Zboncak",
                            Password = "57e1d6e7af3ed32bfe76dbb6a2440572be4ce9a1",
                            PhoneNumber = "(725) 766-6845"
                        },
                        new
                        {
                            CustomerID = new Guid("f6bd4214-fcae-251e-1c0e-19ff98cd05d9"),
                            BirthDate = new DateTime(2012, 6, 12, 19, 20, 22, 192, DateTimeKind.Local).AddTicks(7678),
                            EmailAddress = "Nina.Kshlerin@yahoo.com",
                            FirstName = "Nina",
                            LastName = "Kshlerin",
                            Password = "f04574552ee7ffdbef231961a7dcf2eeb25a1a19",
                            PhoneNumber = "823.596.1362"
                        },
                        new
                        {
                            CustomerID = new Guid("9a2731a6-8052-7fba-e7d5-859847ce1ba1"),
                            BirthDate = new DateTime(2007, 3, 8, 1, 48, 19, 275, DateTimeKind.Local).AddTicks(4627),
                            EmailAddress = "Beverly95@yahoo.com",
                            FirstName = "Beverly",
                            LastName = "Pfeffer",
                            Password = "3f3a3b3b666a4c77c6eb2253b33fb31dcb73e0df",
                            PhoneNumber = "785-350-1846"
                        },
                        new
                        {
                            CustomerID = new Guid("639e22a8-ebb5-9b66-f18f-64bce6951b54"),
                            BirthDate = new DateTime(2005, 6, 21, 5, 37, 8, 334, DateTimeKind.Local).AddTicks(9060),
                            EmailAddress = "Ebony35@gmail.com",
                            FirstName = "Ebony",
                            LastName = "White",
                            Password = "b09ea9aa65cfbd7cb24c3d525424a54dfaaa5bad",
                            PhoneNumber = "658-849-9321"
                        },
                        new
                        {
                            CustomerID = new Guid("64bb2e44-3584-aec1-ee15-f67e8b1fe2d8"),
                            BirthDate = new DateTime(2014, 8, 19, 12, 52, 29, 35, DateTimeKind.Local).AddTicks(4172),
                            EmailAddress = "Vanessa.Lindgren4@yahoo.com",
                            FirstName = "Vanessa",
                            LastName = "Lindgren",
                            Password = "0626d7d31d39f0447528657f25be92cc8b1955c9",
                            PhoneNumber = "544.217.2112 x7292"
                        },
                        new
                        {
                            CustomerID = new Guid("23390a56-c1d1-1d60-1c75-2fa24374999a"),
                            BirthDate = new DateTime(2013, 10, 1, 23, 15, 36, 958, DateTimeKind.Local).AddTicks(4920),
                            EmailAddress = "Annie_Feil@hotmail.com",
                            FirstName = "Annie",
                            LastName = "Feil",
                            Password = "64299fd04c627ec243ade12519e1f9a9ffd1ddb5",
                            PhoneNumber = "1-715-969-4911 x17592"
                        },
                        new
                        {
                            CustomerID = new Guid("771b2a2f-d9a0-2f46-b75e-94585589f127"),
                            BirthDate = new DateTime(2013, 7, 9, 0, 23, 21, 953, DateTimeKind.Local).AddTicks(4278),
                            EmailAddress = "Owen.Kutch81@gmail.com",
                            FirstName = "Owen",
                            LastName = "Kutch",
                            Password = "79c39c51c08e3db58556321310d4705d719c781c",
                            PhoneNumber = "1-533-638-9063"
                        },
                        new
                        {
                            CustomerID = new Guid("9f9b9048-2e80-a16c-f77a-e0a6fe86ef5e"),
                            BirthDate = new DateTime(2005, 12, 17, 2, 12, 25, 153, DateTimeKind.Local).AddTicks(8835),
                            EmailAddress = "Alfredo_Conroy@gmail.com",
                            FirstName = "Alfredo",
                            LastName = "Conroy",
                            Password = "7e6cadf7a519fabbd27bac9815c623c4dffa6781",
                            PhoneNumber = "(902) 950-3406"
                        },
                        new
                        {
                            CustomerID = new Guid("09a1ceff-6067-cfcc-eeee-51e27ad836cf"),
                            BirthDate = new DateTime(2018, 7, 9, 8, 33, 52, 215, DateTimeKind.Local).AddTicks(1645),
                            EmailAddress = "Laurence40@yahoo.com",
                            FirstName = "Laurence",
                            LastName = "Orn",
                            Password = "6bb86560998d073a1b9ba1d5b931af91266d6ddd",
                            PhoneNumber = "(236) 432-2476 x6727"
                        },
                        new
                        {
                            CustomerID = new Guid("d94b91d5-6c77-2434-c3df-919814170af1"),
                            BirthDate = new DateTime(2009, 6, 15, 8, 55, 20, 945, DateTimeKind.Local).AddTicks(2938),
                            EmailAddress = "Regina_Schinner@yahoo.com",
                            FirstName = "Regina",
                            LastName = "Schinner",
                            Password = "1722ef008e510b639af0f2e6d29ef7a8f32a662b",
                            PhoneNumber = "487-376-4865 x995"
                        },
                        new
                        {
                            CustomerID = new Guid("c4919c93-3b57-f555-d360-0930100173c3"),
                            BirthDate = new DateTime(2016, 9, 6, 18, 10, 26, 725, DateTimeKind.Local).AddTicks(9604),
                            EmailAddress = "Bethany24@gmail.com",
                            FirstName = "Bethany",
                            LastName = "Hills",
                            Password = "b230ee58f7932edfd30b14d40052ea88b9e76299",
                            PhoneNumber = "842.390.8806 x3055"
                        },
                        new
                        {
                            CustomerID = new Guid("241fdd79-d370-d294-5ba2-4214bf51b015"),
                            BirthDate = new DateTime(2006, 3, 26, 15, 13, 53, 260, DateTimeKind.Local).AddTicks(1452),
                            EmailAddress = "Clay_Abshire@yahoo.com",
                            FirstName = "Clay",
                            LastName = "Abshire",
                            Password = "c1130528318f54711024ffa98df995bf925e5304",
                            PhoneNumber = "663.744.5518"
                        },
                        new
                        {
                            CustomerID = new Guid("d3a3a7af-ddc4-4ae6-f3f6-ce0e100862f8"),
                            BirthDate = new DateTime(2022, 6, 19, 0, 10, 0, 224, DateTimeKind.Local).AddTicks(1329),
                            EmailAddress = "Christian_Paucek38@yahoo.com",
                            FirstName = "Christian",
                            LastName = "Paucek",
                            Password = "61e51ff968d560adc3ddf7ed1b8a12f0699907a2",
                            PhoneNumber = "898.987.7942 x003"
                        },
                        new
                        {
                            CustomerID = new Guid("64b4e5c0-6541-cdce-487f-d0cf5e41bcdd"),
                            BirthDate = new DateTime(2019, 3, 11, 3, 5, 55, 700, DateTimeKind.Local).AddTicks(224),
                            EmailAddress = "Gregory.Gibson@yahoo.com",
                            FirstName = "Gregory",
                            LastName = "Gibson",
                            Password = "4b9c633ebd15025786d1696936cf719fe755c9ee",
                            PhoneNumber = "(235) 878-4897 x002"
                        },
                        new
                        {
                            CustomerID = new Guid("0a135eb3-695a-2cd4-c170-213222bcdd0e"),
                            BirthDate = new DateTime(2016, 8, 29, 12, 53, 34, 551, DateTimeKind.Local).AddTicks(7246),
                            EmailAddress = "Santos.Mosciski@yahoo.com",
                            FirstName = "Santos",
                            LastName = "Mosciski",
                            Password = "8a399cd1fd098f0a8c0228ba23c7d86461fdfb41",
                            PhoneNumber = "749-945-8869"
                        },
                        new
                        {
                            CustomerID = new Guid("3c5d782e-c346-d1a4-ea87-956078911a78"),
                            BirthDate = new DateTime(2011, 3, 22, 22, 25, 58, 640, DateTimeKind.Local).AddTicks(3048),
                            EmailAddress = "Becky42@yahoo.com",
                            FirstName = "Becky",
                            LastName = "Jenkins",
                            Password = "10604579c6d7de9cf245bf6248b3c11ff1ea1dc1",
                            PhoneNumber = "375-796-3358"
                        },
                        new
                        {
                            CustomerID = new Guid("0efd67fc-9c2a-914b-66c4-f73f17803c80"),
                            BirthDate = new DateTime(2005, 9, 29, 5, 16, 25, 616, DateTimeKind.Local).AddTicks(2649),
                            EmailAddress = "Kim.Ruecker83@hotmail.com",
                            FirstName = "Kim",
                            LastName = "Ruecker",
                            Password = "c04c18d317124d158a699d63a058af9378dd65b2",
                            PhoneNumber = "(316) 420-1209 x9740"
                        },
                        new
                        {
                            CustomerID = new Guid("0e006fa9-de45-528c-0bae-9dd6207620e7"),
                            BirthDate = new DateTime(2008, 2, 6, 10, 34, 26, 660, DateTimeKind.Local).AddTicks(1616),
                            EmailAddress = "Joyce.Breitenberg@yahoo.com",
                            FirstName = "Joyce",
                            LastName = "Breitenberg",
                            Password = "c9ec82fae34791da1559cdb081ddb3797e0ce2e5",
                            PhoneNumber = "318-923-3924"
                        },
                        new
                        {
                            CustomerID = new Guid("5cfc8e08-5314-1ffe-852b-cf7695022774"),
                            BirthDate = new DateTime(2013, 3, 6, 15, 50, 15, 135, DateTimeKind.Local).AddTicks(3620),
                            EmailAddress = "Teri_Gleichner72@gmail.com",
                            FirstName = "Teri",
                            LastName = "Gleichner",
                            Password = "e6f37227df1cfff027e5fd0a9129e478759a3156",
                            PhoneNumber = "840-924-2437"
                        },
                        new
                        {
                            CustomerID = new Guid("4ff0a3f7-1b7e-b61c-4dc4-04965e1306c6"),
                            BirthDate = new DateTime(2013, 6, 13, 9, 5, 50, 756, DateTimeKind.Local).AddTicks(2092),
                            EmailAddress = "Lloyd_Murphy@yahoo.com",
                            FirstName = "Lloyd",
                            LastName = "Murphy",
                            Password = "0ce1e8101f9d3178d882f7060b08148a061b39dc",
                            PhoneNumber = "400-844-7911 x196"
                        },
                        new
                        {
                            CustomerID = new Guid("54515b47-693f-f4da-e89f-9862d69a44ab"),
                            BirthDate = new DateTime(2011, 3, 8, 9, 29, 50, 563, DateTimeKind.Local).AddTicks(3350),
                            EmailAddress = "Marcia_Blick47@yahoo.com",
                            FirstName = "Marcia",
                            LastName = "Blick",
                            Password = "95ee6b9b17ccfd4fa44d4f2e4d52037573b4c3f8",
                            PhoneNumber = "1-477-419-8185 x7652"
                        },
                        new
                        {
                            CustomerID = new Guid("5c2b4042-627b-9bd8-71c2-8a4b10ba2dc3"),
                            BirthDate = new DateTime(2022, 10, 11, 17, 33, 56, 889, DateTimeKind.Local).AddTicks(7657),
                            EmailAddress = "Moses_Orn98@yahoo.com",
                            FirstName = "Moses",
                            LastName = "Orn",
                            Password = "f6dd88a12ff0d731b9d97f95f6c49efd2b5e8575",
                            PhoneNumber = "337.591.0174 x05854"
                        },
                        new
                        {
                            CustomerID = new Guid("e4d782a2-c14b-bfc5-cee8-432a323314b8"),
                            BirthDate = new DateTime(2011, 2, 8, 9, 29, 52, 314, DateTimeKind.Local).AddTicks(7958),
                            EmailAddress = "Myrtle.Tremblay@yahoo.com",
                            FirstName = "Myrtle",
                            LastName = "Tremblay",
                            Password = "213a3fffc29dcfdf60eeb7a98ad9a5a81a61cf13",
                            PhoneNumber = "(431) 650-9030"
                        },
                        new
                        {
                            CustomerID = new Guid("f6d2645c-d118-86e3-b4d6-dead790666a7"),
                            BirthDate = new DateTime(2020, 3, 13, 11, 36, 3, 651, DateTimeKind.Local).AddTicks(4550),
                            EmailAddress = "Otis42@yahoo.com",
                            FirstName = "Otis",
                            LastName = "Carter",
                            Password = "a4036c10959e443503e7c9b14a46f279163a02ce",
                            PhoneNumber = "749.362.8114 x436"
                        },
                        new
                        {
                            CustomerID = new Guid("e9bfd8b1-5a52-3800-6862-2b734d40cd00"),
                            BirthDate = new DateTime(2014, 8, 30, 8, 46, 21, 139, DateTimeKind.Local).AddTicks(9585),
                            EmailAddress = "Kate_Wiegand@gmail.com",
                            FirstName = "Kate",
                            LastName = "Wiegand",
                            Password = "dd63b5ae0f3751ccaa157021025c871051051412",
                            PhoneNumber = "1-449-983-0589 x903"
                        },
                        new
                        {
                            CustomerID = new Guid("bbe74b8f-4d35-5124-de8a-c572b6c207fe"),
                            BirthDate = new DateTime(2016, 11, 13, 8, 24, 35, 68, DateTimeKind.Local).AddTicks(6810),
                            EmailAddress = "Stacy_Effertz@hotmail.com",
                            FirstName = "Stacy",
                            LastName = "Effertz",
                            Password = "d742462ecf3fc4d9d9e00bf5e9786fa48d422160",
                            PhoneNumber = "(535) 793-4002"
                        },
                        new
                        {
                            CustomerID = new Guid("547a3a2a-9746-f1f7-0dc1-9f411376967d"),
                            BirthDate = new DateTime(2007, 9, 24, 21, 14, 21, 279, DateTimeKind.Local).AddTicks(1023),
                            EmailAddress = "Jeannie.Erdman98@yahoo.com",
                            FirstName = "Jeannie",
                            LastName = "Erdman",
                            Password = "15e7b22540b89b81c33920eb1cde27f631f52e51",
                            PhoneNumber = "(887) 331-9600 x582"
                        });
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.Order", b =>
                {
                    b.Property<Guid>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BillingAddressID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BillingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DeliveryAddressID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeliveryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderStatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderID");

                    b.HasIndex("BillingAddressID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("DeliveryAddressID");

                    b.HasIndex("OrderStatusCode");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.OrderedProduct", b =>
                {
                    b.Property<Guid>("OrderedProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OrderedProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderedProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OrderedProductPrice")
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderedProductID");

                    b.HasIndex("OrderID");

                    b.HasIndex("ProductID");

                    b.ToTable("OrderedProduct", (string)null);
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.OrderStatus", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("OrderStatus", (string)null);
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.Product", b =>
                {
                    b.Property<Guid>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BrandID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("ProductURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ProductID");

                    b.HasIndex("BrandID");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            ProductID = new Guid("5a7ec381-7fe2-acea-e21f-5c1649fca189"),
                            BrandID = new Guid("963e205d-c089-03f5-23c8-ab1b097901d5"),
                            IsFeatured = false,
                            ProductDescription = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            ProductName = "Tasty Wooden Car",
                            ProductPrice = 91.274773232301100m,
                            ProductURL = "https://picsum.photos/640/480/?image=752",
                            Stock = 33
                        },
                        new
                        {
                            ProductID = new Guid("357dcc32-5691-5a8d-1205-ac8fdbe918d8"),
                            BrandID = new Guid("5b1fd012-2199-dab9-e58b-92bd68d0fa17"),
                            IsFeatured = true,
                            ProductDescription = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            ProductName = "Small Cotton Salad",
                            ProductPrice = 74.96114833045800m,
                            ProductURL = "https://picsum.photos/640/480/?image=289",
                            Stock = 42
                        },
                        new
                        {
                            ProductID = new Guid("7dd70de1-b007-f0ba-b4af-b26d7650c8cf"),
                            BrandID = new Guid("0ff7bd5d-7afb-72a0-d8aa-f62c8441cdf7"),
                            IsFeatured = true,
                            ProductDescription = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            ProductName = "Gorgeous Wooden Keyboard",
                            ProductPrice = 73.315584367753700m,
                            ProductURL = "https://picsum.photos/640/480/?image=922",
                            Stock = 48
                        },
                        new
                        {
                            ProductID = new Guid("2d43389b-2dc3-6813-0eb0-49b5dc0a55f1"),
                            BrandID = new Guid("7c04d23b-019f-8a60-3710-6edd8e2bd064"),
                            IsFeatured = true,
                            ProductDescription = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            ProductName = "Sleek Frozen Pizza",
                            ProductPrice = 80.496113505445500m,
                            ProductURL = "https://picsum.photos/640/480/?image=692",
                            Stock = 9
                        },
                        new
                        {
                            ProductID = new Guid("20c2ce26-a22d-5015-986b-7777c3f0829e"),
                            BrandID = new Guid("68fbb9a4-cd27-aa9f-7ae6-4281bda59a71"),
                            IsFeatured = true,
                            ProductDescription = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            ProductName = "Sleek Fresh Gloves",
                            ProductPrice = 23.144258243564600m,
                            ProductURL = "https://picsum.photos/640/480/?image=363",
                            Stock = 47
                        },
                        new
                        {
                            ProductID = new Guid("20bd175b-c07a-47ef-9d9c-5f5148e00d33"),
                            BrandID = new Guid("cc4236f3-8909-7940-c61f-66e5915e05ad"),
                            IsFeatured = true,
                            ProductDescription = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            ProductName = "Ergonomic Fresh Mouse",
                            ProductPrice = 53.488236411236300m,
                            ProductURL = "https://picsum.photos/640/480/?image=501",
                            Stock = 9
                        },
                        new
                        {
                            ProductID = new Guid("7da87366-4777-20a1-1cd2-8b582f1dab88"),
                            BrandID = new Guid("33734837-1227-5085-ded5-1b373c300fe9"),
                            IsFeatured = true,
                            ProductDescription = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            ProductName = "Incredible Metal Salad",
                            ProductPrice = 56.220618521897400m,
                            ProductURL = "https://picsum.photos/640/480/?image=778",
                            Stock = 8
                        },
                        new
                        {
                            ProductID = new Guid("c48d9ab4-7f88-06e1-5914-4c46ca2655bd"),
                            BrandID = new Guid("3bf480d3-cb4e-a040-56e8-a8186acdfd9b"),
                            IsFeatured = true,
                            ProductDescription = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            ProductName = "Handmade Steel Gloves",
                            ProductPrice = 37.648282729856800m,
                            ProductURL = "https://picsum.photos/640/480/?image=306",
                            Stock = 43
                        },
                        new
                        {
                            ProductID = new Guid("93e2b54b-aa79-15ec-31c3-ac145b9452a9"),
                            BrandID = new Guid("490c6622-bbea-0234-2100-e37d6a9bb082"),
                            IsFeatured = false,
                            ProductDescription = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            ProductName = "Unbranded Wooden Soap",
                            ProductPrice = 97.489312383108400m,
                            ProductURL = "https://picsum.photos/640/480/?image=693",
                            Stock = 9
                        },
                        new
                        {
                            ProductID = new Guid("11788f1c-7e70-9973-6f3d-c9ff72df695f"),
                            BrandID = new Guid("bb2b43b4-bdc4-6ac7-c2ee-9c850c9c4d75"),
                            IsFeatured = false,
                            ProductDescription = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            ProductName = "Small Frozen Pizza",
                            ProductPrice = 79.048832170222400m,
                            ProductURL = "https://picsum.photos/640/480/?image=929",
                            Stock = 31
                        },
                        new
                        {
                            ProductID = new Guid("951d5f89-e612-e4b6-2d5c-1a7304c14439"),
                            BrandID = new Guid("8d3443d6-7c48-9e89-a8bb-e145421d90c2"),
                            IsFeatured = true,
                            ProductDescription = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            ProductName = "Intelligent Concrete Towels",
                            ProductPrice = 25.920053304135800m,
                            ProductURL = "https://picsum.photos/640/480/?image=66",
                            Stock = 7
                        },
                        new
                        {
                            ProductID = new Guid("559ccb10-47bd-bdf7-38e6-1f55045c5613"),
                            BrandID = new Guid("cbae5d6d-972f-22f0-58bf-b9d0ee21d8ed"),
                            IsFeatured = true,
                            ProductDescription = "The Football Is Good For Training And Recreational Purposes",
                            ProductName = "Small Rubber Car",
                            ProductPrice = 1.3081779709589600m,
                            ProductURL = "https://picsum.photos/640/480/?image=630",
                            Stock = 26
                        },
                        new
                        {
                            ProductID = new Guid("3241e82d-aa2e-7d68-9601-1a198e6f1423"),
                            BrandID = new Guid("959badbe-7bad-57b5-cd3c-f92f276eebd5"),
                            IsFeatured = false,
                            ProductDescription = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            ProductName = "Handmade Fresh Car",
                            ProductPrice = 5.8141218525423300m,
                            ProductURL = "https://picsum.photos/640/480/?image=1004",
                            Stock = 34
                        },
                        new
                        {
                            ProductID = new Guid("5173998f-e412-7ef4-e58f-5fb68a0a3cb6"),
                            BrandID = new Guid("7834298a-c5eb-188f-c4b8-7b2e59525a8c"),
                            IsFeatured = false,
                            ProductDescription = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            ProductName = "Tasty Concrete Cheese",
                            ProductPrice = 20.966636864918600m,
                            ProductURL = "https://picsum.photos/640/480/?image=83",
                            Stock = 7
                        },
                        new
                        {
                            ProductID = new Guid("f9fc6035-b68b-4159-bd9f-10f52b831d26"),
                            BrandID = new Guid("4c9ea98f-1208-8361-8f5f-ccf4b179ff89"),
                            IsFeatured = false,
                            ProductDescription = "The Football Is Good For Training And Recreational Purposes",
                            ProductName = "Incredible Wooden Pizza",
                            ProductPrice = 81.274550259706800m,
                            ProductURL = "https://picsum.photos/640/480/?image=444",
                            Stock = 46
                        },
                        new
                        {
                            ProductID = new Guid("c334080c-037a-04c3-26dd-83f7845ad906"),
                            BrandID = new Guid("0bf3561a-9991-29d4-ce39-8263dd0de6f4"),
                            IsFeatured = true,
                            ProductDescription = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            ProductName = "Awesome Granite Keyboard",
                            ProductPrice = 81.241056360882300m,
                            ProductURL = "https://picsum.photos/640/480/?image=43",
                            Stock = 10
                        },
                        new
                        {
                            ProductID = new Guid("b8f5e25e-08be-5d9f-8b7f-ad247e439b4d"),
                            BrandID = new Guid("0136a8be-afc5-e0cc-f28b-6c79d99c9320"),
                            IsFeatured = false,
                            ProductDescription = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            ProductName = "Tasty Metal Hat",
                            ProductPrice = 69.810464172535800m,
                            ProductURL = "https://picsum.photos/640/480/?image=1046",
                            Stock = 29
                        },
                        new
                        {
                            ProductID = new Guid("73565ff8-60ad-f71d-ae1b-20cd4c67d4e4"),
                            BrandID = new Guid("c2bba114-d677-a87e-9248-5a20bead30a8"),
                            IsFeatured = true,
                            ProductDescription = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            ProductName = "Awesome Granite Bike",
                            ProductPrice = 99.846159014779200m,
                            ProductURL = "https://picsum.photos/640/480/?image=630",
                            Stock = 11
                        },
                        new
                        {
                            ProductID = new Guid("a345a6cf-47e6-ef94-09c6-a848e9de1f90"),
                            BrandID = new Guid("3bc6573e-7be9-adf6-82f4-32bcb4b0f1b2"),
                            IsFeatured = true,
                            ProductDescription = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            ProductName = "Handmade Granite Car",
                            ProductPrice = 48.363655781542700m,
                            ProductURL = "https://picsum.photos/640/480/?image=688",
                            Stock = 39
                        },
                        new
                        {
                            ProductID = new Guid("db731e94-01cd-87d6-95dd-b9d854c7d48b"),
                            BrandID = new Guid("9ff33aaf-690f-bbc1-2c6f-ce2c728d04a5"),
                            IsFeatured = false,
                            ProductDescription = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            ProductName = "Fantastic Frozen Ball",
                            ProductPrice = 97.21016418058900m,
                            ProductURL = "https://picsum.photos/640/480/?image=922",
                            Stock = 2
                        },
                        new
                        {
                            ProductID = new Guid("536227b5-2b5e-7408-ee52-2920143cc4d2"),
                            BrandID = new Guid("9cb19bf8-afde-ddc7-db50-e2ad897154d2"),
                            IsFeatured = false,
                            ProductDescription = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            ProductName = "Fantastic Steel Shirt",
                            ProductPrice = 20.333191389373100m,
                            ProductURL = "https://picsum.photos/640/480/?image=545",
                            Stock = 2
                        },
                        new
                        {
                            ProductID = new Guid("a4fc61a1-e319-b704-4017-da743337b2b1"),
                            BrandID = new Guid("102c15a0-6464-7616-6d88-01236ecd42b5"),
                            IsFeatured = false,
                            ProductDescription = "The Football Is Good For Training And Recreational Purposes",
                            ProductName = "Gorgeous Concrete Shoes",
                            ProductPrice = 90.381531925118300m,
                            ProductURL = "https://picsum.photos/640/480/?image=230",
                            Stock = 28
                        },
                        new
                        {
                            ProductID = new Guid("56185cda-dce2-0f1f-63bd-c90bcfd46f24"),
                            BrandID = new Guid("801abe43-31c6-11d5-ac49-5c10586c790b"),
                            IsFeatured = false,
                            ProductDescription = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            ProductName = "Generic Frozen Computer",
                            ProductPrice = 43.034367190224300m,
                            ProductURL = "https://picsum.photos/640/480/?image=703",
                            Stock = 16
                        },
                        new
                        {
                            ProductID = new Guid("a8927254-d684-205a-4b3e-86ec605d3bbb"),
                            BrandID = new Guid("cec3aa34-f966-56f0-4664-0aaf516dc3be"),
                            IsFeatured = true,
                            ProductDescription = "The Football Is Good For Training And Recreational Purposes",
                            ProductName = "Handmade Wooden Fish",
                            ProductPrice = 9.6679049589056100m,
                            ProductURL = "https://picsum.photos/640/480/?image=521",
                            Stock = 16
                        },
                        new
                        {
                            ProductID = new Guid("f2e2f601-4cfa-c93f-a28d-6a8d66dee66e"),
                            BrandID = new Guid("89acfb10-c061-8721-53b1-d060c8aa0ce0"),
                            IsFeatured = false,
                            ProductDescription = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            ProductName = "Rustic Wooden Chips",
                            ProductPrice = 39.078262093979100m,
                            ProductURL = "https://picsum.photos/640/480/?image=958",
                            Stock = 43
                        },
                        new
                        {
                            ProductID = new Guid("66a3bdf9-c10d-8be0-2283-e0772d50f146"),
                            BrandID = new Guid("0680f4bc-ea50-98f6-7504-6a63414cdf42"),
                            IsFeatured = true,
                            ProductDescription = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            ProductName = "Incredible Wooden Shirt",
                            ProductPrice = 74.111094220593200m,
                            ProductURL = "https://picsum.photos/640/480/?image=924",
                            Stock = 11
                        },
                        new
                        {
                            ProductID = new Guid("1dfb0fba-f84d-f97f-c301-8f9c6294cc89"),
                            BrandID = new Guid("e3e45b65-eda4-a53a-66d0-9b1f8ed98efc"),
                            IsFeatured = true,
                            ProductDescription = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            ProductName = "Generic Concrete Sausages",
                            ProductPrice = 90.101110511506500m,
                            ProductURL = "https://picsum.photos/640/480/?image=311",
                            Stock = 10
                        },
                        new
                        {
                            ProductID = new Guid("18a74a15-fb01-0fcc-ed52-b2e56ed58b61"),
                            BrandID = new Guid("c7b3305f-9bdb-472c-95c4-51184dd2aa8d"),
                            IsFeatured = true,
                            ProductDescription = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            ProductName = "Tasty Cotton Fish",
                            ProductPrice = 2.6719768544062900m,
                            ProductURL = "https://picsum.photos/640/480/?image=70",
                            Stock = 45
                        },
                        new
                        {
                            ProductID = new Guid("8d96b92c-fd82-57dc-7b38-add8e1c205c3"),
                            BrandID = new Guid("e39c64d3-fd29-e24f-16a6-8e0134a19954"),
                            IsFeatured = false,
                            ProductDescription = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            ProductName = "Generic Wooden Bacon",
                            ProductPrice = 23.710091609372800m,
                            ProductURL = "https://picsum.photos/640/480/?image=520",
                            Stock = 31
                        },
                        new
                        {
                            ProductID = new Guid("41e35278-54f7-a421-d0d5-4235826a55d5"),
                            BrandID = new Guid("4700fa3f-5a0e-779f-9a1d-3561e7579c43"),
                            IsFeatured = true,
                            ProductDescription = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            ProductName = "Ergonomic Granite Pizza",
                            ProductPrice = 72.573548961697900m,
                            ProductURL = "https://picsum.photos/640/480/?image=38",
                            Stock = 22
                        },
                        new
                        {
                            ProductID = new Guid("e8e74b1d-98a2-c64a-e809-aaf81583e48c"),
                            BrandID = new Guid("0506fb2f-86b6-b93c-348f-d4f2697be09a"),
                            IsFeatured = false,
                            ProductDescription = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            ProductName = "Tasty Steel Chips",
                            ProductPrice = 92.933303766387200m,
                            ProductURL = "https://picsum.photos/640/480/?image=53",
                            Stock = 30
                        },
                        new
                        {
                            ProductID = new Guid("f1d2a016-dc1c-99aa-a2da-0839bb2d3cf7"),
                            BrandID = new Guid("4d70da6f-141a-62ce-cc33-9a5596935366"),
                            IsFeatured = false,
                            ProductDescription = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            ProductName = "Sleek Frozen Table",
                            ProductPrice = 29.698811345593400m,
                            ProductURL = "https://picsum.photos/640/480/?image=685",
                            Stock = 26
                        },
                        new
                        {
                            ProductID = new Guid("87bb8a54-1311-fa41-a38c-f778d4cc2c00"),
                            BrandID = new Guid("93a16dfd-ab85-04b9-fd40-0ecea27f8448"),
                            IsFeatured = true,
                            ProductDescription = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            ProductName = "Awesome Rubber Chair",
                            ProductPrice = 48.725120094011100m,
                            ProductURL = "https://picsum.photos/640/480/?image=90",
                            Stock = 26
                        },
                        new
                        {
                            ProductID = new Guid("42aa701f-9d67-1932-a0c7-51ef1191c7c7"),
                            BrandID = new Guid("b2c36398-f822-2f8c-9e02-bd1e16f7c55a"),
                            IsFeatured = true,
                            ProductDescription = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            ProductName = "Refined Frozen Keyboard",
                            ProductPrice = 98.645073128233200m,
                            ProductURL = "https://picsum.photos/640/480/?image=597",
                            Stock = 26
                        },
                        new
                        {
                            ProductID = new Guid("dcc5057d-dcfe-0aa7-bbf1-a396b83cefc5"),
                            BrandID = new Guid("9dee3a3f-f243-4328-71f1-e8ffc3e39632"),
                            IsFeatured = false,
                            ProductDescription = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            ProductName = "Tasty Cotton Gloves",
                            ProductPrice = 5.4074056937393800m,
                            ProductURL = "https://picsum.photos/640/480/?image=922",
                            Stock = 38
                        },
                        new
                        {
                            ProductID = new Guid("6b416013-854c-76a2-98e9-976c3da1eaaa"),
                            BrandID = new Guid("3d77c624-9356-3068-8f30-0bb85651729c"),
                            IsFeatured = true,
                            ProductDescription = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            ProductName = "Practical Soft Computer",
                            ProductPrice = 38.488092291396200m,
                            ProductURL = "https://picsum.photos/640/480/?image=90",
                            Stock = 43
                        },
                        new
                        {
                            ProductID = new Guid("58c86520-2f99-e425-c7eb-7c659f6f6b00"),
                            BrandID = new Guid("0bd7df94-02a8-b034-5c45-1dfb54b1f529"),
                            IsFeatured = false,
                            ProductDescription = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            ProductName = "Handmade Metal Mouse",
                            ProductPrice = 30.77958046029300m,
                            ProductURL = "https://picsum.photos/640/480/?image=743",
                            Stock = 34
                        },
                        new
                        {
                            ProductID = new Guid("bd40f82c-8de4-9084-ec2c-20da1effb972"),
                            BrandID = new Guid("c75e8db1-a293-6c21-daa0-4d8d3f9bc259"),
                            IsFeatured = true,
                            ProductDescription = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            ProductName = "Rustic Concrete Table",
                            ProductPrice = 11.224380327027500m,
                            ProductURL = "https://picsum.photos/640/480/?image=414",
                            Stock = 15
                        },
                        new
                        {
                            ProductID = new Guid("5a886510-fe25-add2-276c-37e426e25df7"),
                            BrandID = new Guid("cec876ad-01dd-e278-c9a2-a9307cb760db"),
                            IsFeatured = false,
                            ProductDescription = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            ProductName = "Licensed Rubber Pizza",
                            ProductPrice = 69.504680004671500m,
                            ProductURL = "https://picsum.photos/640/480/?image=398",
                            Stock = 32
                        },
                        new
                        {
                            ProductID = new Guid("acdcabd1-e7ec-0c11-9ad4-28fc36c62e4e"),
                            BrandID = new Guid("41c09f22-e462-eec2-b236-046951f599dd"),
                            IsFeatured = false,
                            ProductDescription = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            ProductName = "Practical Fresh Towels",
                            ProductPrice = 0.84484284783007700m,
                            ProductURL = "https://picsum.photos/640/480/?image=831",
                            Stock = 37
                        });
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.ProductCategory", b =>
                {
                    b.Property<Guid>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProductID", "CategoryID");

                    b.HasIndex("CategoryID");

                    b.ToTable("ProductCategories", (string)null);

                    b.HasData(
                        new
                        {
                            ProductID = new Guid("93e2b54b-aa79-15ec-31c3-ac145b9452a9"),
                            CategoryID = new Guid("044318dd-7a67-4e40-a8aa-21f5938c3cc7")
                        },
                        new
                        {
                            ProductID = new Guid("11788f1c-7e70-9973-6f3d-c9ff72df695f"),
                            CategoryID = new Guid("d50c44df-7c21-48dd-a4a5-59d4637a1480")
                        },
                        new
                        {
                            ProductID = new Guid("87bb8a54-1311-fa41-a38c-f778d4cc2c00"),
                            CategoryID = new Guid("7f8062d5-d970-403a-842a-5502acc09559")
                        },
                        new
                        {
                            ProductID = new Guid("1dfb0fba-f84d-f97f-c301-8f9c6294cc89"),
                            CategoryID = new Guid("044318dd-7a67-4e40-a8aa-21f5938c3cc7")
                        },
                        new
                        {
                            ProductID = new Guid("18a74a15-fb01-0fcc-ed52-b2e56ed58b61"),
                            CategoryID = new Guid("d50c44df-7c21-48dd-a4a5-59d4637a1480")
                        },
                        new
                        {
                            ProductID = new Guid("5173998f-e412-7ef4-e58f-5fb68a0a3cb6"),
                            CategoryID = new Guid("044318dd-7a67-4e40-a8aa-21f5938c3cc7")
                        },
                        new
                        {
                            ProductID = new Guid("7da87366-4777-20a1-1cd2-8b582f1dab88"),
                            CategoryID = new Guid("d50c44df-7c21-48dd-a4a5-59d4637a1480")
                        },
                        new
                        {
                            ProductID = new Guid("acdcabd1-e7ec-0c11-9ad4-28fc36c62e4e"),
                            CategoryID = new Guid("c1335c7f-bc8f-4550-b54d-0fc020e0f9a3")
                        },
                        new
                        {
                            ProductID = new Guid("5a886510-fe25-add2-276c-37e426e25df7"),
                            CategoryID = new Guid("7f8062d5-d970-403a-842a-5502acc09559")
                        },
                        new
                        {
                            ProductID = new Guid("2d43389b-2dc3-6813-0eb0-49b5dc0a55f1"),
                            CategoryID = new Guid("d50c44df-7c21-48dd-a4a5-59d4637a1480")
                        },
                        new
                        {
                            ProductID = new Guid("536227b5-2b5e-7408-ee52-2920143cc4d2"),
                            CategoryID = new Guid("898c680d-24de-452b-9b94-2c540e3b8ac7")
                        },
                        new
                        {
                            ProductID = new Guid("56185cda-dce2-0f1f-63bd-c90bcfd46f24"),
                            CategoryID = new Guid("044318dd-7a67-4e40-a8aa-21f5938c3cc7")
                        },
                        new
                        {
                            ProductID = new Guid("5a7ec381-7fe2-acea-e21f-5c1649fca189"),
                            CategoryID = new Guid("7f8062d5-d970-403a-842a-5502acc09559")
                        },
                        new
                        {
                            ProductID = new Guid("20bd175b-c07a-47ef-9d9c-5f5148e00d33"),
                            CategoryID = new Guid("7f8062d5-d970-403a-842a-5502acc09559")
                        },
                        new
                        {
                            ProductID = new Guid("f1d2a016-dc1c-99aa-a2da-0839bb2d3cf7"),
                            CategoryID = new Guid("a85d899f-05b5-456f-bff2-5c66a3fec3e5")
                        },
                        new
                        {
                            ProductID = new Guid("c48d9ab4-7f88-06e1-5914-4c46ca2655bd"),
                            CategoryID = new Guid("898c680d-24de-452b-9b94-2c540e3b8ac7")
                        },
                        new
                        {
                            ProductID = new Guid("dcc5057d-dcfe-0aa7-bbf1-a396b83cefc5"),
                            CategoryID = new Guid("c1335c7f-bc8f-4550-b54d-0fc020e0f9a3")
                        },
                        new
                        {
                            ProductID = new Guid("f9fc6035-b68b-4159-bd9f-10f52b831d26"),
                            CategoryID = new Guid("a85d899f-05b5-456f-bff2-5c66a3fec3e5")
                        },
                        new
                        {
                            ProductID = new Guid("e8e74b1d-98a2-c64a-e809-aaf81583e48c"),
                            CategoryID = new Guid("898c680d-24de-452b-9b94-2c540e3b8ac7")
                        },
                        new
                        {
                            ProductID = new Guid("58c86520-2f99-e425-c7eb-7c659f6f6b00"),
                            CategoryID = new Guid("7f8062d5-d970-403a-842a-5502acc09559")
                        },
                        new
                        {
                            ProductID = new Guid("bd40f82c-8de4-9084-ec2c-20da1effb972"),
                            CategoryID = new Guid("044318dd-7a67-4e40-a8aa-21f5938c3cc7")
                        },
                        new
                        {
                            ProductID = new Guid("357dcc32-5691-5a8d-1205-ac8fdbe918d8"),
                            CategoryID = new Guid("a85d899f-05b5-456f-bff2-5c66a3fec3e5")
                        },
                        new
                        {
                            ProductID = new Guid("a345a6cf-47e6-ef94-09c6-a848e9de1f90"),
                            CategoryID = new Guid("c1335c7f-bc8f-4550-b54d-0fc020e0f9a3")
                        },
                        new
                        {
                            ProductID = new Guid("3241e82d-aa2e-7d68-9601-1a198e6f1423"),
                            CategoryID = new Guid("7f8062d5-d970-403a-842a-5502acc09559")
                        },
                        new
                        {
                            ProductID = new Guid("b8f5e25e-08be-5d9f-8b7f-ad247e439b4d"),
                            CategoryID = new Guid("898c680d-24de-452b-9b94-2c540e3b8ac7")
                        },
                        new
                        {
                            ProductID = new Guid("41e35278-54f7-a421-d0d5-4235826a55d5"),
                            CategoryID = new Guid("c1335c7f-bc8f-4550-b54d-0fc020e0f9a3")
                        },
                        new
                        {
                            ProductID = new Guid("951d5f89-e612-e4b6-2d5c-1a7304c14439"),
                            CategoryID = new Guid("a85d899f-05b5-456f-bff2-5c66a3fec3e5")
                        },
                        new
                        {
                            ProductID = new Guid("6b416013-854c-76a2-98e9-976c3da1eaaa"),
                            CategoryID = new Guid("7f8062d5-d970-403a-842a-5502acc09559")
                        },
                        new
                        {
                            ProductID = new Guid("20c2ce26-a22d-5015-986b-7777c3f0829e"),
                            CategoryID = new Guid("d50c44df-7c21-48dd-a4a5-59d4637a1480")
                        },
                        new
                        {
                            ProductID = new Guid("73565ff8-60ad-f71d-ae1b-20cd4c67d4e4"),
                            CategoryID = new Guid("044318dd-7a67-4e40-a8aa-21f5938c3cc7")
                        },
                        new
                        {
                            ProductID = new Guid("8d96b92c-fd82-57dc-7b38-add8e1c205c3"),
                            CategoryID = new Guid("a85d899f-05b5-456f-bff2-5c66a3fec3e5")
                        },
                        new
                        {
                            ProductID = new Guid("66a3bdf9-c10d-8be0-2283-e0772d50f146"),
                            CategoryID = new Guid("c1335c7f-bc8f-4550-b54d-0fc020e0f9a3")
                        },
                        new
                        {
                            ProductID = new Guid("559ccb10-47bd-bdf7-38e6-1f55045c5613"),
                            CategoryID = new Guid("c1335c7f-bc8f-4550-b54d-0fc020e0f9a3")
                        },
                        new
                        {
                            ProductID = new Guid("f2e2f601-4cfa-c93f-a28d-6a8d66dee66e"),
                            CategoryID = new Guid("c1335c7f-bc8f-4550-b54d-0fc020e0f9a3")
                        },
                        new
                        {
                            ProductID = new Guid("c334080c-037a-04c3-26dd-83f7845ad906"),
                            CategoryID = new Guid("d50c44df-7c21-48dd-a4a5-59d4637a1480")
                        },
                        new
                        {
                            ProductID = new Guid("db731e94-01cd-87d6-95dd-b9d854c7d48b"),
                            CategoryID = new Guid("044318dd-7a67-4e40-a8aa-21f5938c3cc7")
                        },
                        new
                        {
                            ProductID = new Guid("7dd70de1-b007-f0ba-b4af-b26d7650c8cf"),
                            CategoryID = new Guid("898c680d-24de-452b-9b94-2c540e3b8ac7")
                        },
                        new
                        {
                            ProductID = new Guid("a8927254-d684-205a-4b3e-86ec605d3bbb"),
                            CategoryID = new Guid("7f8062d5-d970-403a-842a-5502acc09559")
                        },
                        new
                        {
                            ProductID = new Guid("a4fc61a1-e319-b704-4017-da743337b2b1"),
                            CategoryID = new Guid("7f8062d5-d970-403a-842a-5502acc09559")
                        },
                        new
                        {
                            ProductID = new Guid("42aa701f-9d67-1932-a0c7-51ef1191c7c7"),
                            CategoryID = new Guid("7f8062d5-d970-403a-842a-5502acc09559")
                        });
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.ProductImage", b =>
                {
                    b.Property<Guid>("ProductImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProductImageID");

                    b.HasIndex("ProductID");

                    b.ToTable("ProductImage", (string)null);
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.Review", b =>
                {
                    b.Property<Guid>("ReviewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ReviewRating")
                        .HasColumnType("int");

                    b.Property<string>("ReviewText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReviewID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("ProductID");

                    b.ToTable("Review", (string)null);
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.ZipCode", b =>
                {
                    b.Property<Guid>("ZipCodeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Commune")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ZipCodeID");

                    b.HasIndex("Code", "Commune")
                        .IsUnique();

                    b.ToTable("ZipCode", (string)null);

                    b.HasData(
                        new
                        {
                            ZipCodeID = new Guid("f80d38a0-7dc7-8150-d72e-2ba23835462f"),
                            Code = 9442,
                            Commune = "Port Amina"
                        },
                        new
                        {
                            ZipCodeID = new Guid("a4557396-d4b4-fe51-6f92-cf74bde8d96e"),
                            Code = 2932,
                            Commune = "Howeburgh"
                        },
                        new
                        {
                            ZipCodeID = new Guid("e0d40144-b685-3d33-9bd7-1a5f54eee82d"),
                            Code = 7475,
                            Commune = "Sabrynamouth"
                        },
                        new
                        {
                            ZipCodeID = new Guid("4512512b-b75e-50e5-5cd8-935662d92b94"),
                            Code = 4469,
                            Commune = "McCulloughhaven"
                        },
                        new
                        {
                            ZipCodeID = new Guid("976214a1-7077-ce1f-00ac-8a33e9aab7f2"),
                            Code = 5273,
                            Commune = "Port Madelynchester"
                        },
                        new
                        {
                            ZipCodeID = new Guid("44c2e0e3-fcc3-c27a-538e-6e49455116ee"),
                            Code = 4914,
                            Commune = "North Kylee"
                        },
                        new
                        {
                            ZipCodeID = new Guid("4daf4f17-6d5f-21b8-39a6-0ff24f2dbe33"),
                            Code = 9370,
                            Commune = "New Howellton"
                        },
                        new
                        {
                            ZipCodeID = new Guid("1b1dad0b-a3e9-a159-0373-c09337b99331"),
                            Code = 4017,
                            Commune = "Stokesview"
                        },
                        new
                        {
                            ZipCodeID = new Guid("7fac8958-fa7b-9218-e34e-281a7af20ba2"),
                            Code = 7308,
                            Commune = "Schroedermouth"
                        },
                        new
                        {
                            ZipCodeID = new Guid("3336805e-5e4e-7318-2b02-2a6e5d2e4c82"),
                            Code = 6997,
                            Commune = "Rooseveltfurt"
                        },
                        new
                        {
                            ZipCodeID = new Guid("b4bdc68a-a64a-4419-adf0-9e436f8be5d7"),
                            Code = 2043,
                            Commune = "North Alexisville"
                        },
                        new
                        {
                            ZipCodeID = new Guid("24e067a5-bcba-a64b-89a1-f492864098c2"),
                            Code = 8414,
                            Commune = "Guiseppeport"
                        },
                        new
                        {
                            ZipCodeID = new Guid("643ac5d4-ffe7-49d2-742f-876c820ee45f"),
                            Code = 5380,
                            Commune = "South Eliseofort"
                        },
                        new
                        {
                            ZipCodeID = new Guid("a94e249e-e8b1-4d4a-15d1-9088d70cdf2c"),
                            Code = 2361,
                            Commune = "North Cale"
                        },
                        new
                        {
                            ZipCodeID = new Guid("1a5a3102-0f88-5b77-38e5-f158bf7735a0"),
                            Code = 2516,
                            Commune = "Pfannerstillville"
                        },
                        new
                        {
                            ZipCodeID = new Guid("5d5ffc88-e4f6-01ab-0532-6152d5ffcb6c"),
                            Code = 3678,
                            Commune = "North Danaburgh"
                        },
                        new
                        {
                            ZipCodeID = new Guid("df2f14ef-c938-d65f-3e40-c107a46206d2"),
                            Code = 5556,
                            Commune = "East Tiana"
                        },
                        new
                        {
                            ZipCodeID = new Guid("84055676-829f-acbf-c9d6-b79993a498e7"),
                            Code = 4904,
                            Commune = "Lake Laverna"
                        },
                        new
                        {
                            ZipCodeID = new Guid("f2c62a4b-4ba0-9d30-c599-cd107c3efb98"),
                            Code = 6857,
                            Commune = "Hyattburgh"
                        },
                        new
                        {
                            ZipCodeID = new Guid("680db309-2788-0074-c91e-a37e6489184b"),
                            Code = 7129,
                            Commune = "Lake Tanya"
                        },
                        new
                        {
                            ZipCodeID = new Guid("2fe62252-a708-551d-a9ff-d8833d091197"),
                            Code = 2696,
                            Commune = "East Vilma"
                        },
                        new
                        {
                            ZipCodeID = new Guid("a6d330d7-4ff6-f3ac-25af-09fbc7ec62e6"),
                            Code = 8856,
                            Commune = "Fayton"
                        },
                        new
                        {
                            ZipCodeID = new Guid("c9561e0a-1f45-5b40-7880-2e31a96a7c21"),
                            Code = 9681,
                            Commune = "Port Devynburgh"
                        },
                        new
                        {
                            ZipCodeID = new Guid("f6f92f29-bbdd-a651-2aca-3fff896eb8da"),
                            Code = 7444,
                            Commune = "Audreanneborough"
                        },
                        new
                        {
                            ZipCodeID = new Guid("81a57a50-52d8-6f5d-4097-8ca4a5e5e0ef"),
                            Code = 6688,
                            Commune = "South Onie"
                        },
                        new
                        {
                            ZipCodeID = new Guid("b54eb4ee-32ee-fc1f-c447-44df61a9aaaf"),
                            Code = 1009,
                            Commune = "Pollichville"
                        },
                        new
                        {
                            ZipCodeID = new Guid("9265e15e-9a3e-a359-8ec8-7d38f873209c"),
                            Code = 5493,
                            Commune = "Sheilaside"
                        },
                        new
                        {
                            ZipCodeID = new Guid("f9aa6132-ad53-fc43-3b30-65e4b3dd050c"),
                            Code = 1702,
                            Commune = "Felixport"
                        },
                        new
                        {
                            ZipCodeID = new Guid("fc6d7cd8-0cca-eee7-890e-829ae57858fd"),
                            Code = 9637,
                            Commune = "East Wilber"
                        },
                        new
                        {
                            ZipCodeID = new Guid("5d685d57-9862-1a84-6e13-4d70783ecdb6"),
                            Code = 7172,
                            Commune = "Treview"
                        },
                        new
                        {
                            ZipCodeID = new Guid("2c7254c6-cbae-3bff-8407-d6e27ce6fd7b"),
                            Code = 4172,
                            Commune = "Kaliview"
                        },
                        new
                        {
                            ZipCodeID = new Guid("7580cc87-11c1-a621-aba2-0a883df7ca02"),
                            Code = 5326,
                            Commune = "West Hunterburgh"
                        },
                        new
                        {
                            ZipCodeID = new Guid("3d669649-f46a-4191-51a1-e414fdbff9d4"),
                            Code = 8569,
                            Commune = "Kanebury"
                        },
                        new
                        {
                            ZipCodeID = new Guid("fde18f58-a54d-1b84-fa91-d96002983e36"),
                            Code = 3713,
                            Commune = "Port Ally"
                        },
                        new
                        {
                            ZipCodeID = new Guid("015a6590-7325-373f-d12e-edcf12ee40ba"),
                            Code = 4332,
                            Commune = "Shawnatown"
                        },
                        new
                        {
                            ZipCodeID = new Guid("c0467670-83c8-6512-81c3-bac4147f19f3"),
                            Code = 1209,
                            Commune = "Greenfelderville"
                        },
                        new
                        {
                            ZipCodeID = new Guid("cb4a4c65-09a3-144d-5784-81af4891ac19"),
                            Code = 9303,
                            Commune = "South Brooklynmouth"
                        },
                        new
                        {
                            ZipCodeID = new Guid("730db6da-ba29-d493-4d84-d392155f232c"),
                            Code = 7460,
                            Commune = "Nathanport"
                        },
                        new
                        {
                            ZipCodeID = new Guid("42fd0dfe-7c0b-d282-ffd4-9aa835798a96"),
                            Code = 6608,
                            Commune = "South Roslyn"
                        },
                        new
                        {
                            ZipCodeID = new Guid("ff0a3fb9-1dae-3232-89ed-a47d796b61cd"),
                            Code = 2361,
                            Commune = "Deborahton"
                        });
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.Address", b =>
                {
                    b.HasOne("BodyRocky.Back.WebApi.DataAccess.Entities.Customer", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BodyRocky.Back.WebApi.DataAccess.Entities.ZipCode", "ZipCode")
                        .WithMany("Addresses")
                        .HasForeignKey("ZipCodeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("ZipCode");
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.Basket", b =>
                {
                    b.HasOne("BodyRocky.Back.WebApi.DataAccess.Entities.BasketStatus", "BasketStatus")
                        .WithMany("Baskets")
                        .HasForeignKey("BasketStatusCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BodyRocky.Back.WebApi.DataAccess.Entities.Customer", "Customer")
                        .WithMany("Baskets")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BasketStatus");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.BasketProduct", b =>
                {
                    b.HasOne("BodyRocky.Back.WebApi.DataAccess.Entities.Basket", "Basket")
                        .WithMany("BasketProducts")
                        .HasForeignKey("BasketID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BodyRocky.Back.WebApi.DataAccess.Entities.Product", "Product")
                        .WithMany("BasketProducts")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Basket");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.Order", b =>
                {
                    b.HasOne("BodyRocky.Back.WebApi.DataAccess.Entities.Address", "BillingAddress")
                        .WithMany("BilledOrders")
                        .HasForeignKey("BillingAddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BodyRocky.Back.WebApi.DataAccess.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BodyRocky.Back.WebApi.DataAccess.Entities.Address", "DeliveryAddress")
                        .WithMany("DeliveredOrders")
                        .HasForeignKey("DeliveryAddressID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BodyRocky.Back.WebApi.DataAccess.Entities.OrderStatus", "OrderStatus")
                        .WithMany("Orders")
                        .HasForeignKey("OrderStatusCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillingAddress");

                    b.Navigation("Customer");

                    b.Navigation("DeliveryAddress");

                    b.Navigation("OrderStatus");
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.OrderedProduct", b =>
                {
                    b.HasOne("BodyRocky.Back.WebApi.DataAccess.Entities.Order", "Order")
                        .WithMany("OrderedProducts")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BodyRocky.Back.WebApi.DataAccess.Entities.Product", "Product")
                        .WithMany("OrderedProducts")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.Product", b =>
                {
                    b.HasOne("BodyRocky.Back.WebApi.DataAccess.Entities.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.ProductCategory", b =>
                {
                    b.HasOne("BodyRocky.Back.WebApi.DataAccess.Entities.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BodyRocky.Back.WebApi.DataAccess.Entities.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.ProductImage", b =>
                {
                    b.HasOne("BodyRocky.Back.WebApi.DataAccess.Entities.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.Review", b =>
                {
                    b.HasOne("BodyRocky.Back.WebApi.DataAccess.Entities.Customer", "Customer")
                        .WithMany("Reviews")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BodyRocky.Back.WebApi.DataAccess.Entities.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.Address", b =>
                {
                    b.Navigation("BilledOrders");

                    b.Navigation("DeliveredOrders");
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.Basket", b =>
                {
                    b.Navigation("BasketProducts");
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.BasketStatus", b =>
                {
                    b.Navigation("Baskets");
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.Category", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.Customer", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Baskets");

                    b.Navigation("Orders");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.Order", b =>
                {
                    b.Navigation("OrderedProducts");
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.Product", b =>
                {
                    b.Navigation("BasketProducts");

                    b.Navigation("OrderedProducts");

                    b.Navigation("ProductCategories");

                    b.Navigation("ProductImages");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("BodyRocky.Back.WebApi.DataAccess.Entities.ZipCode", b =>
                {
                    b.Navigation("Addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
