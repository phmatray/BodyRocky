@inject BasketDispatcher BasketDispatcher

<div class="flex items-center justify-between border gap-6 p-4 border-gray-200 rounded">
  <div class="w-28">
    <img alt="product 6" class="w-full" src="@Data.ProductURL">
  </div>
  <div class="w-1/3">
    <NavLink href="@GetProductRoute()">
      <h2 class="text-gray-800 text-xl font-medium uppercase hover:text-primary transition">
        @Data.ProductName
      </h2>
    </NavLink>
    <p class="text-gray-500 text-sm">
      DisponibilitÃ©:
      @if (Data.Stock > 0)
      {
        <span class="text-green-500">En stock</span>
      }
      else
      {
        <span class="text-red-500">Rupture de stock</span>
      }
    </p>
  </div>
  <div class="text-primary text-lg font-semibold">
    @Data.ProductPrice.ToString("C")
  </div>
  <button @onclick="AddToBasket"
          class="px-6 py-2 text-center text-sm text-white bg-primary border border-primary rounded hover:bg-transparent hover:text-primary transition uppercase font-roboto font-medium">
    ajouter au panier
  </button>
 
  @* <div class="text-gray-600 cursor-pointer hover:text-primary"> *@
  @*   <i class="fa-solid fa-trash"></i> *@
  @* </div> *@
</div>

@code {

  [Parameter, EditorRequired]
  public ProductResponse Data { get; set; } = null!;
  
  private string GetProductRoute()
    => $"{Routes.PRODUCT_ROUTE}/{Data.ProductID}";
  
  private void AddToBasket()
  {
    BasketDispatcher.AddToBasket(Data);
  }

}